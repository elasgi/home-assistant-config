homeassistant:

automation:
- action:
  - service: notify.pushover
    data:
      message: "Diskutrymme \xF6ver tr\xF6skel"
      title: "D\xF6belnsgatan 89 | RPI3"
  alias: Maintenance | System | Disk space
  id: '1496517175891'
  trigger:
  - above: '75'
    entity_id: sensor.disk_use_home
    platform: numeric_state

- action:
  - service: zwave.heal_network
  alias: Maintenance | Z-wave | Heal
  id: '1496477445434'
  trigger:
  - at: '2:31:00'
    platform: time

binary_sensor:
  - platform: command_line
    name: systemstate_homebridge
    scan_interval: 10
    command: if pgrep -x "homebridge" > /dev/null; then echo Online; else echo Offline; fi
    payload_on: "Online"
    payload_off: "Offline"
    device_class: connectivity

  - platform: command_line
    name: systemstate_sonoscontrol
    scan_interval: 10
    command: if pgrep -fa "node-sonos-http-api" > /dev/null; then echo Online; else echo Offline; fi
    payload_on: "Online"
    payload_off: "Offline"
    device_class: connectivity

  - platform: command_line
    name: systemstate_mosquitto
    scan_interval: 10
    command: if pgrep -fa "mosquitto" > /dev/null; then echo Online; else echo Offline; fi
    payload_on: "Online"
    payload_off: "Offline"
    device_class: connectivity

  - platform: command_line
    name: systemstate_pm2
    scan_interval: 10
    command: if pgrep -fa "pm2" > /dev/null; then echo Online; else echo Offline; fi
    payload_on: "Online"
    payload_off: "Offline"
    device_class: connectivity

  - platform: command_line
    name: systemstate_ftpserver
    scan_interval: 10
    command: if pgrep -fa "vsftp" > /dev/null; then echo Online; else echo Offline; fi
    payload_on: "Online"
    payload_off: "Offline"
    device_class: connectivity

  - platform: command_line
    name: systemstate_ssh
    scan_interval: 10
    command: if pgrep -fa "sshd" > /dev/null; then echo Online; else echo Offline; fi
    payload_on: "Online"
    payload_off: "Offline"
    device_class: connectivity

shell_command:
  # UNIX: RANDOM STUFF
  system_check_wifi_strength: /usr/bin/awk 'NR==3 {print $3 "00"}''' /proc/net/wireless
  sonos_check_controller: /usr/bin/nmap -p 5005 localhost | grep open &> /dev/null && echo success || echo fail
